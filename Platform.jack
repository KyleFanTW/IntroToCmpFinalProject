class Platform {
    field BrickGame game;
    field int posX, posY;
    field int length;
    // 0=none,1=up,2=down,3=left,4=right
    field int dir;

    constructor Platform new(BrickGame Agame, int Ax, int Ay) {
        var int i;
        let game = Agame;
        let posX = Ax - 15;
        let posY = Ay;
        let length = 15;
        let dir = 4;
        let i = 0;
        while( i < length ) {
            let posX = posX + 1;
            do drawHead(game.getCycle());
            let i = i + 1;
            do game.nextCycle();
        }
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    

    method void setDir(int newdir) {
		if (dir = 3){
			if (newdir = 4){
				//change the head to the new direction's head
				let posX = posX + length -1;
			}
		}
		if (dir = 4){
			if (newdir = 3){
				let posX = posX - length +1;
			}
		}
        let dir = newdir;
        return;
    }



    method void move(int cycle) {
        var GlobalBoard board;
        let board = game.getBoard();

        if( dir = 3 ) {
            // left
            if( posX = 0 ) {
                let dir = 4;
				let posX = posX + length -1;
            }
            else {
                let posX = posX - 1;
            }
        }
        if( dir = 4 ) {
            // right
            if( posX = (board.sizeX() - 2) ) {
                let dir = 3;
				let posX = posX - length;
            }
            else {
                let posX = posX + 1;
            }
        }
        do drawHead(cycle);
        do clearTail(cycle);
        return;
    }


    method void drawHead(int cycle) {
        var GlobalBoard board;
        let board = game.getBoard();
        do board.drawPlatBit(posX, posY);
        
        return;
    }

    method void clearTail(int cycle) {
        var GlobalBoard board;
        var int tailX, tailY;
		if ( dir = 3){
			let tailX = posX + length;
			}
		if ( dir = 4){
			let tailX = posX - length;
			}	
		let tailY = posY;
        let board = game.getBoard();
        do board.clearPlatBit(tailX, tailY);
        return;
    }

    method int posX() {
        return posX;
    }
    method int posY() {
        return posY;
    }
    method int getLength() {
        return length;
    }
    method int getDir() {
        return dir;
    }



}